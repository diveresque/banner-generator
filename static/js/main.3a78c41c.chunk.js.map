{"version":3,"sources":["hooks/useInputs.js","components/Input/Input.js","components/InputWrapper/ContentInput/ContentInput.js","components/InputWrapper/ColorInput/ColorInput.js","components/InputWrapper/SizeInput/SizeInput.js","components/InputWrapper/MiscInput/MiscInput.js","components/InputWrapper/InputWrapper.js","components/Output/Output.js","components/Title/Title.js","components/DevIcon/DevIcon.js","components/Buttons/Button/Button.js","components/Buttons/LinkButton/LinkButton.js","components/GithubLink/GithubLink.js","App.js","index.js"],"names":["getRandomColor","Math","random","toString","useInputs","_useState","useState","_useState2","Object","slicedToArray","bgColor","setBgColor","_useState3","_useState4","title","setTitle","_useState5","_useState6","titleSize","setTitleSize","_useState7","_useState8","titleColor","setTitleColor","_useState9","_useState10","hasBorder","setHasBorder","randomizeInputs","Input","styled","input","_templateObject","InputBlock","div","ContentInput_templateObject","props","isRow","Label","label","_templateObject2","ContentInput","_ref","react_default","a","createElement","Input_Input","value","onChange","e","target","Wrapper","ColorInput_templateObject","ColorInput_templateObject2","_templateObject3","ColorInput","ColorInput_InputBlock","ColorInput_Label","lib","triangle","color","onChangeComplete","hex","SizeInput_templateObject","SizeInput_templateObject2","SizeInput","Fragment","SizeInput_InputBlock","SizeInput_Label","type","min","MiscInput_templateObject","RowLabel","MiscInput_templateObject2","MiscInput","MiscInput_InputBlock","checked","InputWrapper_templateObject","Detail","details","InputWrapper_templateObject2","Summary","summary","InputWrapper_templateObject3","InputWrapper","values","setters","InputWrapper_Wrapper","open","InputWrapper_ContentInput_ContentInput","InputWrapper_ColorInput_ColorInput","InputWrapper_SizeInput_SizeInput","InputWrapper_MiscInput_MiscInput","Output_templateObject","Title","h1","Output_templateObject2","size","Output","Output_Wrapper","id","Title_templateObject","DevIcon","xmlns","version","width","height","viewBox","role","aria-labelledby","className","d","Button","button","Button_templateObject","LinkButton","LinkButton_templateObject","GithubLink","href","aria-label","style","fill","position","top","border","right","aria-hidden","transformOrigin","App_templateObject","GeneratorWrapper","App_templateObject2","ActionWrapper","App_templateObject3","App","_useInputs","_useInputs2","imgURL","setImgURL","useEffect","output","document","getElementById","html2canvas","x","offsetLeft","y","offsetTop","scale","then","canvas","toDataURL","components_GithubLink_GithubLink","App_Wrapper","components_Title_Title","components_DevIcon_DevIcon","components_Output_Output","components_InputWrapper_InputWrapper","Button_Button","onClick","LinkButton_LinkButton","download","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.3a78c41c.chunk.js","sourcesContent":["import { useState } from \"react\"\n\nconst getRandomColor = () => {\n  return '#' + (Math.random() * 0xFFFFFF << 0).toString(16);\n}\n\n/**\n * Handles our input states & updates\n */\nconst useInputs = () => {\n  const [bgColor, setBgColor] = useState(\"black\")\n  const [title, setTitle] = useState(\"Hello DEV ðŸŽ‰\")\n  const [titleSize, setTitleSize] = useState(\"5\")\n  const [titleColor, setTitleColor] = useState(\"white\")\n  const [hasBorder, setHasBorder] = useState(true)\n\n  const randomizeInputs = () => {\n    setBgColor(getRandomColor())\n    setTitleColor(getRandomColor())\n    setHasBorder(Math.random() >= 0.5)\n  }\n\n  return [\n    { bgColor, title, titleSize, titleColor, hasBorder },\n    { setBgColor, setTitle, setTitleSize, setTitleColor, setHasBorder, randomizeInputs }\n  ]\n}\n\nexport default useInputs\n","import styled from \"styled-components\"\n\nconst Input = styled.input`\n  font-weight: 300;\n  font-size: 1rem;\n  padding: 0.3125rem;\n  border-radius: 4px;\n  border: 1px solid black;\n\n  &:focus {\n    outline: transparent;\n    border: 1px solid darkgrey;\n  }\n`\n\nexport default Input\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nimport { Input } from \"components/Input\"\n\nconst InputBlock = styled.div`\n  display: flex;\n  flex-direction: ${ (props) => props.isRow ? \"row\" : \"column\"};\n  align-items: ${ (props) => props.isRow ? \"center\" : \"flex-start\"};\n  justify-content: center;\n  margin: 1rem;\n\n  @media (max-width: 769px) {\n    width: 100%;\n    align-items: center;\n  }\n`\n\nconst Label = styled.label`\n  font-weight: 300;\n  margin-bottom: 0.2rem;\n  font-size: 0.75rem;\n`\n\nconst ContentInput = ({ title, setTitle }) => {\n  return (\n    <InputBlock>\n      <Label>Title</Label>\n      <Input value={title} onChange={(e) => setTitle(e.target.value)} />\n    </InputBlock>\n  )\n}\n\nexport default ContentInput\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { CompactPicker } from \"react-color\"\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`\n\nconst InputBlock = styled.div`\n  display: flex;\n  flex-direction: ${ (props) => props.isRow ? \"row\" : \"column\"};\n  align-items: ${ (props) => props.isRow ? \"center\" : \"flex-start\"};\n  justify-content: center;\n  margin: 1rem;\n\n  @media (max-width: 769px) {\n    width: 100%;\n    align-items: center;\n  }\n`\n\nconst Label = styled.label`\n  font-weight: 300;\n  margin-bottom: 0.2rem;\n  font-size: 0.75rem;\n`\n\nconst ColorInput = ({ bgColor, setBgColor, titleColor, setTitleColor }) => {\n  return (\n    <Wrapper>\n      <InputBlock>\n        <Label>Background color</Label>\n        <CompactPicker\n          triangle=\"hide\"\n          color={bgColor}\n          onChangeComplete={(color) => setBgColor(color.hex)}\n        />\n      </InputBlock>\n      <InputBlock>\n        <Label>Title color</Label>\n        <CompactPicker\n          triangle=\"hide\"\n          color={titleColor}\n          onChangeComplete={(color) => setTitleColor(color.hex)}\n        />\n      </InputBlock>\n    </Wrapper>\n  )\n}\n\nexport default ColorInput\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nimport { Input } from \"components/Input\"\n\nconst InputBlock = styled.div`\n  display: flex;\n  flex-direction: ${ (props) => props.isRow ? \"row\" : \"column\"};\n  align-items: ${ (props) => props.isRow ? \"center\" : \"flex-start\"};\n  justify-content: center;\n  margin: 1rem;\n\n  @media (max-width: 769px) {\n    width: 100%;\n    align-items: center;\n  }\n`\n\nconst Label = styled.label`\n  font-weight: 300;\n  margin-bottom: 0.2rem;\n  font-size: 0.75rem;\n`\n\nconst SizeInput = ({ titleSize, setTitleSize }) => {\n  return (\n    <>\n      <InputBlock>\n        <Label>Title size (in <code>rem</code>)</Label>\n        <Input value={titleSize} type=\"number\" min=\"1\" onChange={(e) => setTitleSize(e.target.value)} />\n      </InputBlock>\n    </>\n  )\n}\n\nexport default SizeInput\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nimport { Input } from \"components/Input\"\n\nconst InputBlock = styled.div`\n  display: flex;\n  flex-direction: ${ (props) => props.isRow ? \"row\" : \"column\"};\n  align-items: ${ (props) => props.isRow ? \"center\" : \"flex-start\"};\n  margin: 1rem;\n\n  @media (max-width: 769px) {\n    width: 100%;\n    align-items: center;\n  }\n`\n\nconst RowLabel = styled.label`\n  font-weight: 300;\n  margin-right: 0.2rem;\n`\n\nconst MiscInput = ({ hasBorder, setHasBorder }) => {\n  return (\n    <>\n      <InputBlock isRow={true}>\n        <RowLabel>Borders</RowLabel>\n        <Input type=\"checkbox\" value={hasBorder} checked={hasBorder} onChange={(e) => setHasBorder(e.target.checked)} />\n      </InputBlock>\n    </>\n  )\n}\n\nexport default MiscInput\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\n\nimport { ContentInput } from \"components/InputWrapper/ContentInput\"\nimport { ColorInput } from \"components/InputWrapper/ColorInput\"\nimport { SizeInput } from \"components/InputWrapper/SizeInput\"\nimport { MiscInput } from \"components/InputWrapper/MiscInput\"\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media (max-width: 1200px) {\n    flex-wrap: wrap;\n    justify-content: center;\n  }\n`\n\nconst Detail = styled.details`\n  margin-left: 1rem;\n`\n\nconst Summary = styled.summary`\n  text-align: left;\n  font-size: 2rem;\n\n  &:hover {\n    cursor: pointer;\n    opacity: 0.8;\n  }\n\n  &:focus {\n    outline: transparent;\n  }\n`\n\nconst InputWrapper = ({ values, setters }) => {\n  const { bgColor, title, titleSize, titleColor, hasBorder } = values\n  const { setBgColor, setTitle, setTitleSize, setTitleColor, setHasBorder } = setters\n\n  return (\n    <Wrapper>\n      <Detail open>\n        <Summary>Content</Summary>\n        <ContentInput title={title} setTitle={setTitle} />\n      </Detail>\n      <Detail>\n        <Summary>Colors</Summary>\n        <ColorInput\n          bgColor={bgColor} setBgColor={setBgColor}\n          titleColor={titleColor} setTitleColor={setTitleColor}\n        />\n      </Detail>\n      <Detail>\n        <Summary>Sizes</Summary>\n        <SizeInput titleSize={titleSize} setTitleSize={setTitleSize} />\n      </Detail>\n      <Detail>\n        <Summary>Miscellaneous</Summary>\n        <MiscInput hasBorder={hasBorder} setHasBorder={setHasBorder} />\n      </Detail>\n    </Wrapper>\n  )\n}\n\nInputWrapper.propTypes = {\n  values: PropTypes.shape({\n    bgColor: PropTypes.string,\n    title: PropTypes.string,\n    titleSize: PropTypes.string,\n    titleColor: PropTypes.string,\n    hasBorder: PropTypes.bool\n  }).isRequired,\n  setters: PropTypes.shape({\n    setBgColor: PropTypes.func,\n    setTitle: PropTypes.func,\n    setTitleSize: PropTypes.func,\n    setTitleColor: PropTypes.func,\n    setHasBorder: PropTypes.func\n  }).isRequired\n}\n\n\nexport default InputWrapper\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\n\nconst Wrapper = styled.div`\n  width: 1000px;\n  height: 420px;\n  background-color: ${(props) => props.bgColor};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: ${(props) => props.titleColor};\n  border: 1px solid #dbdbdb;\n  border: ${(props) => props.hasBorder ? \"0.625rem solid white\" : \"0.625rem solid transparent\"};\n\n  @media (max-width: 1200px) {\n    width: auto;\n    height: auto;\n  }\n`\n\nconst Title = styled.h1`\n  font-weight: 300;\n  font-size: ${ (props) => props.size}rem;\n`\n\nconst Output = ({ values }) => {\n  const { bgColor, title, titleSize, titleColor, hasBorder } = values\n\n  return (\n    <Wrapper bgColor={bgColor} titleColor={titleColor} hasBorder={hasBorder} id=\"capture\">\n      <Title size={titleSize}>{title}</Title>\n    </Wrapper>\n  )\n}\n\nOutput.propTypes = {\n  values: PropTypes.shape({\n    bgColor: PropTypes.string,\n    title: PropTypes.string,\n    titleSize: PropTypes.string,\n    titleColor: PropTypes.string,\n    hasBorder: PropTypes.bool\n  }).isRequired\n}\n\nexport default Output\n","import styled from \"styled-components\"\n\nconst Title = styled.h1`\n  position: absolute;\n  top: 0;\n  font-weight: 300;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0;\n  padding: 1rem;\n\n  @media (max-width: 769px) {\n    font-size: 1rem;\n  }\n`\n\nexport default Title\n","import React from \"react\"\n\nconst DevIcon = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1\" width=\"100\" height=\"50\" viewBox=\"0 0 132.000000 65.000000\" role=\"img\" aria-labelledby=\"a9wmcfszrii5ie8jak6lqvuqr4cvgwr\" className=\"logo\"><title id=\"a9wmcfszrii5ie8jak6lqvuqr4cvgwr\">App logo</title><path d=\"M0 33v32h11.3c12.5 0 17.7-1.6 21.5-6.5 3.8-4.8 4.4-9 4-28-.3-16.8-.5-18.2-2.7-21.8C30.3 2.5 26.1 1 12 1H0v32zm23.1-19.1c2.3 1.9 2.4 2.3 2.4 18.5 0 15.7-.1 16.7-2.2 18.8-1.7 1.6-3.5 2.2-7 2.2l-4.8.1-.3-20.8L11 12h4.9c3.3 0 5.6.6 7.2 1.9zM46.1 3.6c-2 2.6-2.1 3.9-2.1 29.6v26.9l2.5 2.4c2.3 2.4 2.9 2.5 16 2.5H76V54.1l-10.2-.3-10.3-.3v-15l6.3-.3 6.2-.3V27H55V12h21V1H62.1c-13.9 0-14 0-16 2.6zM87 15.2c2.1 7.9 5.5 20.8 7.6 28.8 3.2 12.3 4.3 15 7 17.7 1.9 2 4.2 3.3 5.7 3.3 3.1 0 7.1-3.1 8.5-6.7 1-2.6 15.2-55.6 15.2-56.8 0-.3-2.8-.5-6.2-.3l-6.3.3-5.6 21.5c-3.5 13.6-5.8 20.8-6.2 19.5C105.9 40 96 1.9 96 1.4c0-.2-2.9-.4-6.4-.4h-6.4L87 15.2z\"></path></svg>\n  )\n}\n\nexport default DevIcon\n","import styled from \"styled-components\"\n\nconst Button = styled.button`\n  padding: 0.1875rem 1rem;\n  background-color: #cfd7ff;\n  font-size: 1rem;\n  border: 0.125rem solid black;\n  border-radius: 0.1875rem;\n  margin: 0.5rem;\n  font-weight: bold;\n  text-decoration: none;\n  color: black;\n\n  &:hover {\n    cursor: pointer;\n    opacity: 0.8;\n  }\n\n  &:focus {\n    outline: transparent;\n  }\n`\n\nexport default Button\n","import styled from \"styled-components\"\n\nconst LinkButton = styled.a`\n  padding: 0.1875rem 1rem;\n  background-color: #66e2d5;\n  font-size: 1rem;\n  border: 0.125rem solid black;\n  border-radius: 0.1875rem;\n  margin: 0.5rem;\n  font-weight: bold;\n  text-decoration: none;\n  color: black;\n\n  &:hover {\n    cursor: pointer;\n    opacity: 0.8;\n  }\n\n  &:focus {\n    outline: transparent;\n  }\n`\n\nexport default LinkButton\n","import React from \"react\"\n\nimport \"./GithubLink.css\"\n\nconst GithubLink = () => {\n  const svgStyle = {\n    fill: \"#151513\",\n    color: \"#fff\",\n    position: \"absolute\",\n    top: 0,\n    border: 0,\n    right: 0\n  }\n\n  const pathStyle = {\n    transformOrigin: \"130px 106px\",\n  }\n\n  return (\n    <a href=\"https://github.com/christopherkade/banner-generator\" className=\"github-corner\" aria-label=\"View source on GitHub\">\n      <svg width=\"80\" height=\"80\" viewBox=\"0 0 250 250\" style={svgStyle} aria-hidden=\"true\"><path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path><path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" style={pathStyle} className=\"octo-arm\"></path><path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" className=\"octo-body\"></path></svg>\n    </a>\n  )\n}\n\nexport default GithubLink\n","import React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\"\nimport html2canvas from \"html2canvas\"\n\nimport useInputs from \"hooks/useInputs\"\nimport { InputWrapper } from \"components/InputWrapper\"\nimport { Output } from \"components/Output\"\nimport { Title } from \"components/Title\"\nimport { DevIcon } from \"components/DevIcon\"\nimport { Button } from \"components/Buttons/Button\"\nimport { LinkButton } from \"components/Buttons/LinkButton\"\nimport { GithubLink } from \"components/GithubLink\"\n\nconst Wrapper = styled.div`\n  text-align: center;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst GeneratorWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 8rem;\n\n  @media (max-width: 769px) {\n    flex-direction: column;\n    margin-bottom: 0;\n  }\n`\n\nconst ActionWrapper = styled.div`\n  position: relative;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`\n\nconst App = () => {\n  const [values, setters] = useInputs()\n  const [imgURL, setImgURL] = useState(\"#\")\n\n  /**\n   * Called when the user updates the banner\n   * Renders the output as a canvas with html2canvas\n   * Transforms the canvas to a data URI, and save it for later download\n   */\n  useEffect(() => {\n    const output = document.getElementById(\"capture\")\n    html2canvas(output, {\n      // Work around\n      // Find a way to have a fixed 1000x420 size without croping out borders or starting with a 10px offset\n      // Certainly related to html2canvas\n      width: 1015,\n      height: 440,\n      x: output.offsetLeft + 2,\n      y: output.offsetTop,\n      scale: 1\n    }).then(canvas => {\n      setImgURL(canvas.toDataURL('image/png'))\n    });\n  }, [values])\n\n  return (\n    <>\n      <GithubLink />\n      <Wrapper>\n        <Title>\n          <DevIcon />\n          &nbsp; banner generator\n        </Title>\n        <GeneratorWrapper>\n          <Output values={values} />\n          <ActionWrapper>\n            <InputWrapper values={values} setters={setters} />\n            <Button onClick={setters.randomizeInputs}>\n              RANDOMISE\n            </Button>\n            <LinkButton href={imgURL} download=\"banner.png\">\n              DOWNLOAD BANNER\n            </LinkButton>\n          </ActionWrapper>\n        </GeneratorWrapper>\n      </Wrapper>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}